@page
@using ProductInventoryManagementSystem.Models

<h2>Home</h2>

@(Html.DevExtreme().DataGrid<ProductInventory>()
    .ShowBorders(true)
    .DataSource(_ => _
        .Mvc()
        .Controller("ProductInventoryWebAPI")
        .LoadAction("GetProductInventory")
        .InsertAction("Create")
        .UpdateAction("Update")
        .DeleteAction("Delete")
        .Key("ProductID"))
    .Columns(_ => {
        _.AddFor(_ => _.ProductID);
        _.AddFor(_ => _.ProductName);
        _.AddFor(_ => _.Description);
        _.AddFor(_ => _.Type);
        _.AddFor(_ => _.Price);
        _.AddFor(_ => _.Quantity);
    })
    .Editing(_ => _
        .Mode(GridEditMode.Form)
        .UseIcons(true)
        .Texts(_ => _.AddRow("Add Item"))
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        .RefreshMode(GridEditRefreshMode.Reshape)
    )
    .Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems => {
            totalItems.AddFor(_ => _.Quantity).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems => {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
    .Toolbar(toolbar =>
    {
        toolbar.Items(_ => _
            .Add()
            .Name("addRowButton")
            .ShowText(ToolbarItemShowTextMode.Always)
        );
    })
)